---
openapi: 3.0.1
info:
  title: Gourmet experiences API V1
  version: v1
paths:
  "/api/v1/experiences":
    get:
      summary: Retrieves all Experiences
      tags:
      - Experiences
      responses:
        '200':
          description: Experiences found
          content:
            application/json:
              schema:
                type: array
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  description:
                    type: text
                  image:
                    type: string
                  experience_fee:
                    type: decimal
                  add_testing_fee:
                    type: decimal
                  reserve_full_table:
                    type: decimal
                  guests:
                    type: integer
                  details:
                    type: text
                required:
                - id
                - name
                - description
                - image
                - experience_fee
                - add_testing_fee
                - reserve_full_table
                - guests
    post:
      summary: Create a new experience
      tags:
      - Experiences
      parameters: []
      responses:
        '201':
          description: experience created
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
                description:
                  type: string
                experience_fee:
                  type: decimal
                add_testing_fee:
                  type: decimal
                reserve_full_table:
                  type: decimal
                guests:
                  type: integer
                image:
                  type: string
                details:
                  type: text
              required:
              - id
              - name
              - description
              - experience_fee
              - add_testing_fee
              - reserve_full_table
              - guests
              - image
              - details
  "/api/v1/experiences/{id}":
    get:
      summary: Retrieves an specific Experience
      tags:
      - Experiences
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Experience found
          content:
            application/json:
              schema:
                type: objetc
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  description:
                    type: text
                  image:
                    type: string
                  experience_fee:
                    type: decimal
                  add_testing_fee:
                    type: decimal
                  reserve_full_table:
                    type: decimal
                  guests:
                    type: integer
                required:
                - id
                - name
                - description
                - image
                - experience_fee
                - add_testing_fee
                - reserve_full_table
                - guests
        '500':
          description: Record not found
    delete:
      summary: Delete an experience
      tags:
      - Experiences
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Experience deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  description:
                    type: string
                  experience_fee:
                    type: decimal
                  add_testing_fee:
                    type: decimal
                  reserve_full_table:
                    type: decimal
                  guests:
                    type: integer
                  image:
                    type: string
                  details:
                    type: text
                required:
                - id
                - name
                - description
                - experience_fee
                - add_testing_fee
                - reserve_full_table
                - guests
                - image
                - details
  "/api/v1/users/{user_id}/reservations":
    get:
      summary: Retrieves all Reservations from an User
      tags:
      - Reservations
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Reservations found
          content:
            application/json:
              schema:
                type: array
                properties:
                  id:
                    type: integer
                  user_id:
                    type: integer
                  experience_id:
                    type: integer
                  date:
                    type: datetime
                  city:
                    type: string
                required:
                - id
                - user_id
                - experience_id
                - date
                - city
    post:
      summary: Creates a Reservation for an User
      tags:
      - Reservations
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '201':
          description: reservation created
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                user_id:
                  type: integer
                experience_id:
                  type: integer
                date:
                  type: datetime
                city:
                  type: string
              required:
              - id
              - user_id
              - experience_id
              - date
              - city
  "/api/v1/users/{user_id}/reservations/{id}":
    delete:
      summary: Deletes an user Reservation
      tags:
      - Reservations
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Reservations found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  user_id:
                    type: integer
                  experience_id:
                    type: integer
                  date:
                    type: datetime
                  city:
                    type: string
                required:
                - id
                - user_id
                - experience_id
                - date
                - city
  "/api/v1/users":
    post:
      summary: Creates a new User
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: user created
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
                username:
                  type: string
              required:
              - id
              - name
              - username
  "/api/v1/users/{username}":
    get:
      summary: Retrieves an specific User
      tags:
      - Users
      parameters:
      - name: username
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                type: objetc
                properties:
                  exist:
                    type: boolean
                  id:
                    type: integer
                  name:
                    type: string
                  username:
                    type: string
                required:
                - exist
                - id
                - name
                - username
        '500':
          description: user not found
servers:
- url: https://gourmet-experiences.onrender.com
  variables:
    defaultHost:
      default: gourmet-experiences.onrender.com
